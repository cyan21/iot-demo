DemoApp:
  pipelineName: demo_app
  pipelineContainerName: demo_app_docker
  pipelineDistributionName: demo_app_distribute
  releaseBundleName: iot-demo
  projectName: jupiter
  artifactoryIntegration: artifactory_eu
  distributionIntegration: distribution_eu
  status: dark
  container:
    # for Docker build
    registry: yann-swampup.dev.aws.devopsacc.team/jupiter-docker
    image: turbine
    tag: 0.0.4
    # for Docker push (which calls the JFrog CLI set props => only accept local repo)
    repoSource: jupiter-docker-dev-local
    repoPromotion1: jupiter-docker-release-local
##########################################
## CONTAINER PIPELINE
##########################################
DemoAppContainerResources:
  gitRepo:
    name: src_dockerfile_demo_app
    gitProvider: yann_github
    path: cyan21/iot-demo
    branches:
      include: swampup
      # files:
    #      exclude: ^ci\/.+\.yml 
    # exclude: ^ci\/pipelines\.yml

    buildOnCommit: true
  buildInfo:
    resourceName: bi_demo_app_docker
    name: demo_app_docker
  buildInfoPromotion:
    resourceName: bi_demo_app_docker_promoted_staging
  propertyBag:
    name: pb_demo_app_docker
DemoAppContainerSteps:
  dockerBuild:
    name: build_demo_app_docker
    dockerFileName: Dockerfile
    dockerFileLocation: .
  dockerPush:
    name: publish_demo_app_docker
    autoPublishBuildInfo: true
  xray:
    name: scan_demo_app_docker
  promotion:
    name: promote_bi_demo_app_docker
    includeDependencies: false
    status: SCAN_OK
    comment: Xray passed test successfully !!!!
    copy: false
##########################################
## DISTRIBUTION PIPELINE
##########################################
DemoAppDistributionResources:
  releaseBundle:
    resourceName: rb_demo_app
    name: turbine-demo
    isSigned: true
    dryRun:
      create: false
      distribute: true
  aql:
    name: aql_demo_app
    edgeRepo: docker-local
  distributionRule:
    name: dr_rb_demo_app
    serviceName: "*"
    siteName: "*"
    cityName: "*"
    countryCodes:
      - "LA"
DemoAppDistributionSteps:
  initPipeline:
    name: init_distribution
  createRB:
    name: init_rb
  distributeRB:
    name: distribite_rb
